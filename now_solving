int n, k;
	cin >> n >> k;
	vector<int> a(n);
	for (auto& i : a) cin >> i;
	unordered_set<int> st(a.begin(), a.end());
	int mex = 0;
	while (st.find(mex) != st.end()) ++mex;
	// m[i] = (iがはじめて追加された時のmex(A))
	vector<int> m(4001);
	int i = mex;
	while (i < 4001) {
		int j = i + 1;
		while (st.find(j) != st.end()) ++j;
		m[i] = j;
		i = j;
	}
	print(mex);
	print(m);

	//ClosedIntervals s;
	//rep(i, 0, n) {
	//	int a;
	//	cin >> a;
	//	s.insert(a);
	//}
	//
	//vi m(n + k + 1);
	//int cur = s.mex();
	//rep(i, cur, n + k + 1) {
	//	m[i] = s.mex();
	//	s.insert(i);
	//}
	//print(m);
	//vector<vector<mint>> dp(k + 1, vector(n + k + 1, mint(0)));
	//dp[0][cur] = 1;
	//rep(i, 0, k) {
	//	rep(j, 0, n + k) {
	//		// A に [0, mex(A) - 1 = j - 1] を追加する
	//		// このとき mex は変化しない
	//		dp[i + 1][j] += dp[i][j] * j;
	//		// A に mex(A) を追加
	//		dp[i + 1][m[j]] += dp[i][j];
	//	}
	//}
	//print(dp[k]);
	//print(accumulate(all(dp[k]), mint(0)));
